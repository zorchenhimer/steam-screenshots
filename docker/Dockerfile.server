# Build stage
FROM golang:1.22-alpine AS builder

WORKDIR /app

# Install git for version info
RUN apk add --no-cache git

# Copy go mod files
COPY go.mod go.sum ./
RUN go mod download

# Copy source code
COPY . .

# Build the server binary
RUN CGO_ENABLED=0 GOOS=linux go build \
    -ldflags "-X github.com/zorchenhimer/steam-screenshots.gitCommit=$(git rev-parse HEAD) -X github.com/zorchenhimer/steam-screenshots.version=$(git describe --abbrev=0 --tags 2>/dev/null || echo 'dev')" \
    -o server cmd/server.go

# Runtime stage
FROM alpine:latest

RUN apk --no-cache add ca-certificates

WORKDIR /app

# Copy the binary from builder
COPY --from=builder /app/server .

# Copy static files and templates
COPY --from=builder /app/static ./static
COPY --from=builder /app/templates ./templates
COPY --from=builder /app/banners ./banners

# Expose default port
EXPOSE 8080

# Run the server
CMD ["./server", "-c", "/app/config/server-config.docker.json"]